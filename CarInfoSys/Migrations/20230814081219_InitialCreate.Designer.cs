// <auto-generated />
using System;
using CarInfoSys.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace CarInfoSys.Migrations
{
    [DbContext(typeof(SysDataContext))]
    [Migration("20230814081219_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("CarInfoSys.Models.Car", b =>
                {
                    b.Property<long>("viechleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("carType")
                        .HasColumnType("integer");

                    b.Property<string>("color")
                        .HasColumnType("text");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<double>("dailyFare")
                        .HasColumnType("double precision");

                    b.Property<int>("egnineCpacity")
                        .HasColumnType("integer");

                    b.Property<bool>("rented")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("updatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("viechleId");

                    b.ToTable("Car");
                });

            modelBuilder.Entity("CarInfoSys.Models.CarRental", b =>
                {
                    b.Property<long>("rentalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<long?>("CarviechleId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DriverdirverId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long>("customerId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("endDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("startDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("updatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("viechleId")
                        .HasColumnType("bigint");

                    b.HasKey("rentalId");

                    b.HasIndex("CarviechleId");

                    b.HasIndex("DriverdirverId");

                    b.HasIndex("customerId");

                    b.ToTable("CarRental");
                });

            modelBuilder.Entity("CarInfoSys.Models.Customer", b =>
                {
                    b.Property<long>("customerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("customerFirstName")
                        .HasColumnType("text");

                    b.Property<string>("customerLastName")
                        .HasColumnType("text");

                    b.Property<string>("phoneNumber")
                        .HasColumnType("text");

                    b.HasKey("customerId");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("CarInfoSys.Models.Driver", b =>
                {
                    b.Property<long>("dirverId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("driverName")
                        .HasColumnType("text");

                    b.Property<string>("licence")
                        .HasColumnType("text");

                    b.Property<string>("phoneNamber")
                        .HasColumnType("text");

                    b.HasKey("dirverId");

                    b.ToTable("Driver");
                });

            modelBuilder.Entity("CarInfoSys.Models.Features", b =>
                {
                    b.Property<long>("featureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("carType")
                        .HasColumnType("integer");

                    b.Property<int>("engineCapacity")
                        .HasColumnType("integer");

                    b.Property<bool>("withDriver")
                        .HasColumnType("boolean");

                    b.HasKey("featureId");

                    b.ToTable("Features");
                });

            modelBuilder.Entity("CarInfoSys.Models.CarRental", b =>
                {
                    b.HasOne("CarInfoSys.Models.Car", "Car")
                        .WithMany("carRentals")
                        .HasForeignKey("CarviechleId");

                    b.HasOne("CarInfoSys.Models.Driver", "Driver")
                        .WithMany("carRentals")
                        .HasForeignKey("DriverdirverId");

                    b.HasOne("CarInfoSys.Models.Customer", "Customer")
                        .WithMany("carRentals")
                        .HasForeignKey("customerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
